#!/bin/bash

usage () {
	cat <<- EOF

	Usage: ${0##*/} [PRINCIPAL INTEREST MONTH -i --interactive -h --help]
	
	Where:
	
	PRINCIPAL is amount of the loan (Float | Integer).
	INTEREST is the APR as a number (Float | Integer).
	MONTH is the length of the loan's term (Integer).
	
	EOF
}

is_float () {
	[[ "$1" =~ ^[[:digit:]]*\.[[:digit:]]+$ ]]
}

is_integer () {
	[[ "$1" =~ ^[0-9]+$ ]]
}

is_float_or_integer () {
	is_float $1 || is_integer $1
}

read_value () {
	local value
	read -p "Please type $1 or Q|q to quit) > " value

	if [[ "$value" =~ ^Q|q$ ]]; then
		return 1		
	fi

	if $("$2" "$value"); then
		eval "$3=$value"
		return 0
	else 
		usage >&2
		read_value $*
	fi
}

check_inclusion () {
	local result=0
	for i in $1; do
		for j in $2; do
			if [[ $i == $j ]]; then
				result=1
				break;
			fi
		done
	done
	((result))
}

calculate_loan () {
	BC_OUT=$(
		bc <<- EOF
		scale = 10
		i = $2 / 12
		p = $1
		n = $3
		result = p * ((i * ((1 + i) ^ n)) / (((1 + i) ^ n) - 1))
		result
		EOF
	)	
	LC_NUMERIC="C.UTF-8" printf "Result: %.5f\n" "$BC_OUT"
}

if check_inclusion "$*" "-h --help"; then
	usage
	exit
elif check_inclusion "$*" "-i --interactive"; then
	if
		read_value PRINCIPAL is_float_or_integer p &&
		read_value INTEREST is_float_or_integer i &&
		read_value MONTHS is_integer l;
	then
		calculate_loan $p $i $l
	else
		echo Bye!
		exit
	fi
elif (($# == 3)) && is_float_or_integer "$1" && is_float_or_integer "$2" && is_integer "$3"; then
	calculate_loan "$1" "$2" "$3"
else
	usage >&2
	exit 1
fi

